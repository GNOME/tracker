/* tracker-sparql-2.0.h generated by valac 0.40.8, the Vala compiler, do not modify */


#ifndef __SRC_LIBTRACKER_SPARQL_BACKEND_TRACKER_SPARQL_2_0_H__
#define __SRC_LIBTRACKER_SPARQL_BACKEND_TRACKER_SPARQL_2_0_H__

#include <glib.h>
#include <gio/gio.h>
#include "libtracker-sparql/tracker-generated-no-checks.h"
#include <stdlib.h>
#include <string.h>

G_BEGIN_DECLS



void tracker_sparql_connection_get_async (GCancellable* cancellable,
                                          GAsyncReadyCallback _callback_,
                                          gpointer _user_data_);
TrackerSparqlConnection* tracker_sparql_connection_get_finish (GAsyncResult* _res_,
                                                               GError** error);
TrackerSparqlConnection* tracker_sparql_connection_get (GCancellable* cancellable,
                                                        GError** error);
TrackerSparqlConnection* tracker_sparql_connection_remote_new (const gchar* url_base);
TrackerSparqlConnection* tracker_sparql_connection_local_new (TrackerSparqlConnectionFlags flags,
                                                              GFile* store,
                                                              GFile* journal,
                                                              GFile* ontology,
                                                              GCancellable* cancellable,
                                                              GError** error);
void tracker_sparql_connection_local_new_async (TrackerSparqlConnectionFlags flags,
                                                GFile* store,
                                                GFile* journal,
                                                GFile* ontology,
                                                GCancellable* cancellable,
                                                GAsyncReadyCallback _callback_,
                                                gpointer _user_data_);
TrackerSparqlConnection* tracker_sparql_connection_local_new_finish (GAsyncResult* _res_,
                                                                     GError** error);
void tracker_sparql_connection_set_domain (const gchar* domain);
gchar* tracker_sparql_connection_get_domain (void);
void tracker_sparql_connection_set_dbus_connection (GDBusConnection* dbus_connection);
GDBusConnection* tracker_sparql_connection_get_dbus_connection (void);


G_END_DECLS

#endif
